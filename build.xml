<?xml version="1.0" encoding="utf-8" ?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:jacoco="antlib:org.jacoco.ant" name="codewars_riscv" default="build" basedir=".">
  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="" />

  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="./gwt-2.8.2" />

  <property name="result.dir" location="./target"/>
  <property name="result.classes.dir" location="${result.dir}/classes"/>
  <property name="result.report.dir" location="${result.dir}/site/jacoco"/>
  <property name="result.exec.file" location="${result.dir}/jacoco.exec"/>

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <pathelement location="${gwt.sdk}/gwt-dev.jar"/>
    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar"/>
    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
    <pathelement location="lib/elemental2-core-1.0.0-RC1.jar"/>
    <pathelement location="lib/elemental2-dom-1.0.0-RC1.jar"/>
    <pathelement location="lib/elemental2-promise-1.0.0-RC1.jar"/>
    <pathelement location="lib/base-1.0.0-RC1.jar"/>

    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) here -->
  </path>

  <path id="project.test.path">
    <pathelement location="lib/junit-4.12.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
  </path>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath path="lib/jacocoant.jar"/>
  </taskdef>

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="8" target="8" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" maxmemory="512m">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="com.codewars_js"/>

      <arg value="-style"/>
      <arg value="PRETTY"/>
      <!--<arg value="DETAILED"/>-->

      <arg value="-XmethodNameDisplayMode"/>
      <arg value="FULL"/>

    </java>
  </target>

  <target name="devmode" depends="javac" description="Run development mode (pass -Dgwt.args=-nosuperDevMode to fallback to classic DevMode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode" maxmemory="1g">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/gwt-codeserver.jar"/>
      </classpath>
      <arg value="-startupUrl"/>
      <arg value="page.html"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY, -logLevel DEBUG or -nosuperDevMode -->
      <arg line="${gwt.args}"/>
      <arg value="com.codewars_js"/>
      <arg value="com.codewars_js"/>

      <arg value="-XmethodNameDisplayMode"/>
      <arg value="FULL"/>

      <arg value="-style"/>
      <arg value="PRETTY"/>
      <!--<arg value="DETAILED"/> -->
    </java>
  </target>


  <target name="javac.tests" depends="javac" description="Compiles test code">
    <javac srcdir="test" includes="**" encoding="utf-8"
      source="1.7" target="1.7" nowarn="true"
      destdir="war/WEB-INF/classes"
      debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.test.path"/>
      <classpath refid="project.class.path"/>
    </javac>
  </target>

  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
    <mkdir dir="reports/htmlunit.dev" />
    <jacoco:coverage destfile="jacoco.dev.exec">
      <junit fork="yes" printsummary="yes" haltonfailure="yes" maxmemory="256m">
        <sysproperty key="gwt.args" value="-devMode -logLevel WARN -war www-test" />
        <sysproperty key="java.awt.headless" value="true" />
        <classpath>
          <pathelement location="src" />
          <pathelement location="test" />
          <path refid="project.class.path" />
          <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
          <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
          <pathelement location="${gwt.sdk}/gwt-codeserver.jar"/>
          <path refid="project.test.path"/>
        </classpath>
        <batchtest todir="reports/htmlunit.dev" >
          <fileset dir="test" >
            <include name="**/*.java" />
          </fileset>
        </batchtest>
        <formatter type="plain" />
        <formatter type="xml" />
      </junit>
    </jacoco:coverage>
  </target>

  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
    <mkdir dir="reports/htmlunit.prod" />
    <jacoco:coverage destfile="jacoco.prod.exec">
      <junit fork="yes" printsummary="yes" haltonfailure="yes" maxmemory="256m">
        <sysproperty key="gwt.args" value="-logLevel WARN -war www-test" />
        <sysproperty key="java.awt.headless" value="true" />
        <classpath>
          <pathelement location="src" />
          <pathelement location="test" />
          <path refid="project.class.path" />
          <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
          <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
          <pathelement location="${gwt.sdk}/gwt-codeserver.jar"/>
          <path refid="project.test.path"/>
        </classpath>
        <batchtest todir="reports/htmlunit.prod" >
          <fileset dir="test" >
            <include name="**/*.java" />
          </fileset>
        </batchtest>
        <formatter type="plain" />
        <formatter type="xml" />
      </junit>
    </jacoco:coverage>
  </target>

  <target name="report.dev" depends="test.dev">
    <jacoco:report>
      <executiondata>
        <file file="jacoco.dev.exec"/>
      </executiondata>
      <structure name="JaCoCo Development">
        <classfiles>
          <fileset dir="war\WEB-INF\classes"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="src"/>
        </sourcefiles>
      </structure>
      <!--  to produce reports in different formats.  -->
      <html destdir="${result.report.dir}/dev"/>
      <csv destfile="${result.report.dir}/dev/report.csv"/>
      <xml destfile="${result.report.dir}/dev/report.xml"/>
    </jacoco:report>
  </target>

  <target name="report.prod" depends="test.prod">
    <jacoco:report>
      <executiondata>
        <file file="jacoco.prod.exec"/>
      </executiondata>
      <structure name="JaCoCo Production">
        <classfiles>
          <fileset dir="war\WEB-INF\classes"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="src"/>
        </sourcefiles>
      </structure>
      <html destdir="${result.report.dir}/prod"/>
      <csv destfile="${result.report.dir}/prod/report.csv"/>
      <xml destfile="${result.report.dir}/prod/report.xml"/>
    </jacoco:report>
  </target>

  <target name="test" description="Run development and production mode tests">
    <antcall target="test.dev" />
    <antcall target="test.prod" />
  </target>

  <target name="report" description="Run coverage on development and production mode tests">
    <antcall target="report.dev"/>
    <antcall target="report.prod"/>
  </target>

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="codewars_js.war" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/codewars_js" failonerror="false" />
  </target>

  <target name="resolve" description="--> retrieve dependencies with Ivy">
    <ivy:retrieve/>
  </target>

</project>
